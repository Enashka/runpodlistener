#!/usr/bin/env python3
"""
RunPod ComfyUI Image Sync

This script syncs images generated by ComfyUI on RunPod to Google Drive.
"""

import os
import sys
import argparse
import logging

from src.utils.logging_setup import setup_logging
from src.sync_manager import SyncManager

logger = logging.getLogger(__name__)

def parse_args():
    """Parse command line arguments."""
    parser = argparse.ArgumentParser(
        description="Sync ComfyUI images from RunPod to Google Drive"
    )
    parser.add_argument(
        "--once",
        action="store_true",
        help="Run the sync once and exit"
    )
    parser.add_argument(
        "--config",
        type=str,
        help="Path to a custom .env file"
    )
    parser.add_argument(
        "--output-dir",
        type=str,
        help="Override the ComfyUI output directory"
    )
    return parser.parse_args()

def main():
    """Main entry point."""
    args = parse_args()
    
    # Load custom config if provided
    if args.config and os.path.exists(args.config):
        from dotenv import load_dotenv
        load_dotenv(args.config)
    
    # Override output directory if provided
    if args.output_dir:
        os.environ["COMFYUI_OUTPUT_DIR"] = args.output_dir
    
    # Set up logging
    setup_logging()
    
    try:
        # Create and run the sync manager
        sync_manager = SyncManager()
        
        if args.once:
            # Run the sync once
            sync_manager.sync_files()
        else:
            # Run the sync continuously
            sync_manager.run()
    except KeyboardInterrupt:
        logger.info("Program stopped by user")
    except Exception as e:
        logger.error(f"An error occurred: {str(e)}")
        return 1
    finally:
        # Clean up resources
        if 'sync_manager' in locals():
            sync_manager.cleanup()
    
    return 0

if __name__ == "__main__":
    sys.exit(main()) 